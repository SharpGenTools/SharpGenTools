<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!--
		net8.0/net9.0 for full assembly trimming
		net8.0/net9.0 for function pointers codegen and Native(U)Long API surface and partial assembly trimming
		netstandard2.1 is .NET Core 3.0, but System.Memory is already inbox since 2.1
		netstandard2.0 for smaller dependency tree than netstandard1.3
		-->
		<TargetFrameworks>netstandard2.0;netstandard2.1;net8.0;net9.0</TargetFrameworks>
		<Description>Support classes for code generated by SharpGen.</Description>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<CheckEolTargetFramework>false</CheckEolTargetFramework>
		<IsTrimmable>true</IsTrimmable>
		<EnableTrimAnalyzer>true</EnableTrimAnalyzer>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<AnalysisLevel>preview</AnalysisLevel>
		<PolySharpIncludeRuntimeSupportedAttributes>true</PolySharpIncludeRuntimeSupportedAttributes>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="PolySharp" PrivateAssets="all" />
		<PackageReference Include="System.Memory" Condition="'$(TargetFramework)' != 'net8.0' and '$(TargetFramework)' != 'net9.0' and '$(TargetFramework)' != 'netstandard2.1'" />
		<PackageReference Include="System.Runtime.CompilerServices.Unsafe" Condition="'$(TargetFramework)' != 'net8.0' and '$(TargetFramework)' != 'net9.0'" />
        <PackageReference Include="System.Text.Json" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="Mapping.xml" PackagePath="build" />
		<Content Include="SharpGen.Runtime.props" PackagePath="build;buildMultiTargeting" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0' OR '$(TargetFramework)' == 'net9.0'">
		<Compile Remove="Shim/ReferenceEqualityComparer.cs" />
	</ItemGroup>

	<ItemGroup>
		<AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
			<_Parameter1>SharpGen.Runtime.COM, PublicKey=$(SharpGenPublicKey)</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>


</Project>
